name: Build and Push RGT Portal Services

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REGISTRY: 330858616968.dkr.ecr.ap-south-1.amazonaws.com

jobs:
  build-and-push-ecr:
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 45
    permissions:
      packages: write
      contents: write
      attestations: write
      id-token: write # Needed for OIDC

    strategy:
      matrix:
        service: [ai, backend, client]
        include:
          - service: ai
            dockerfile: ./ai/Dockerfile
            ecr_repo: rgt-portal-team-a/ai
          - service: backend
            dockerfile: ./backend/Dockerfile
            ecr_repo: rgt-portal-team-a/backend
          - service: client
            dockerfile: ./client/Dockerfile
            ecr_repo: rgt-portal-team-a/client

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker BuildX
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::330858616968:role/rgt-portal-team-a-oidc
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Generate Docker Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.ECR_REGISTRY }}/${{ matrix.ecr_repo }}
          tags: |
            latest
            ${{ github.sha }}
            ${{ matrix.service }}

      # - name: Cache Docker layers
      #   uses: actions/cache@v4
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.ref }}-${{ github.sha }}-${{ matrix.service }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-${{ github.ref }}
      #       ${{ runner.os }}-buildx

      - name: Build and Push Docker Image to ECR
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          file: ${{ matrix.dockerfile }}
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.ECR_REGISTRY }}/${{ matrix.ecr_repo }}:${{ matrix.service }}
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Scan Docker Image for Vulnerabilities
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: '${{ env.ECR_REGISTRY }}/${{ matrix.ecr_repo }}:${{ matrix.service }}'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
