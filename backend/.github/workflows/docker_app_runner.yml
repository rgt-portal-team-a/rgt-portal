name: Deploy Docker to AWS App Runner

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1  # mumbai region
  ECR_REPOSITORY: rgt-portal
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test:run
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Create .env.production file from secrets
          echo "${{ secrets.ENV_PRODUCTION }}" > .env.production
          
          # Build Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          
          # Save ECR image URI as an artifact
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}"
      
      - name: Save image URI
        id: save-uri
        run: echo "image=${{ steps.build-image.outputs.image }}" >> $GITHUB_OUTPUT
    
    outputs:
      image-uri: ${{ steps.save-uri.outputs.image }}
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Create .env.production file
        run: echo "${{ secrets.ENV_PRODUCTION }}" > .env.production
      
      - name: Deploy to App Runner
        uses: aws-actions/aws-app-runner-deploy@v1
        with:
          service: rgt-portal
          image-uri: ${{ needs.build.outputs.image-uri }}
          port: 8000
          env-file: .env.production
          cpu: 1
          memory: 2GB
          wait-for-service-stability: true